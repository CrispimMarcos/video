{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conta\\\\dev\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Instância do Axios para requisições à API\nexport const api = axios.create({\n  baseURL: \"http://localhost:8000/api\"\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Carregar usuário e tokens do localStorage ao iniciar\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    const storedAccess = localStorage.getItem(\"access_token\");\n    const storedRefresh = localStorage.getItem(\"refresh_token\");\n    if (storedUser && storedAccess && storedRefresh) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // Login\n  const login = async (email, password) => {\n    try {\n      const res = await api.post(\"/login/\", {\n        email,\n        password\n      });\n      localStorage.setItem(\"access_token\", res.data.access);\n      localStorage.setItem(\"refresh_token\", res.data.refresh);\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n      setUser(res.data.user);\n      return res.data.user;\n    } catch (err) {\n      var _err$response;\n      console.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n      throw new Error(\"Erro ao fazer login. Verifique suas credenciais.\");\n    }\n  };\n\n  // Registro + login automático\n  const register = async ({\n    nome,\n    email,\n    telefone,\n    password\n  }) => {\n    try {\n      await api.post(\"/register/\", {\n        nome,\n        email,\n        telefone,\n        password\n      });\n      return await login(email, password);\n    } catch (err) {\n      var _err$response2;\n      console.error(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err);\n      throw new Error(\"Erro ao registrar. Verifique os dados e tente novamente.\");\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    localStorage.clear();\n    setUser(null);\n  };\n\n  // Renovar token\n  const refreshToken = async () => {\n    const refresh = localStorage.getItem(\"refresh_token\");\n    if (!refresh) throw new Error(\"No refresh token available\");\n    try {\n      const res = await api.post(\"/token/refresh/\", {\n        refresh\n      });\n      localStorage.setItem(\"access_token\", res.data.access);\n      return res.data.access;\n    } catch (err) {\n      logout();\n      throw new Error(\"Sessão expirada. Faça login novamente.\");\n    }\n  };\n\n  // Configura interceptadores **uma única vez**\n  useEffect(() => {\n    const requestInterceptor = api.interceptors.request.use(config => {\n      const token = localStorage.getItem(\"access_token\");\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    });\n    const responseInterceptor = api.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      const originalRequest = error.config;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n          const newAccess = await refreshToken();\n          originalRequest.headers.Authorization = `Bearer ${newAccess}`;\n          return api(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n      return Promise.reject(error);\n    });\n\n    // Remove interceptadores ao desmontar\n    return () => {\n      api.interceptors.request.eject(requestInterceptor);\n      api.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","api","create","baseURL","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","storedAccess","storedRefresh","JSON","parse","login","email","password","res","post","setItem","data","access","refresh","stringify","err","_err$response","console","error","response","Error","register","nome","telefone","_err$response2","logout","clear","refreshToken","requestInterceptor","interceptors","request","use","config","token","headers","Authorization","responseInterceptor","_error$response","originalRequest","status","_retry","newAccess","Promise","reject","eject","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/conta/dev/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// Instância do Axios para requisições à API\r\nexport const api = axios.create({\r\n  baseURL: \"http://localhost:8000/api\",\r\n});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Carregar usuário e tokens do localStorage ao iniciar\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    const storedAccess = localStorage.getItem(\"access_token\");\r\n    const storedRefresh = localStorage.getItem(\"refresh_token\");\r\n\r\n    if (storedUser && storedAccess && storedRefresh) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  // Login\r\n  const login = async (email, password) => {\r\n    try {\r\n      const res = await api.post(\"/login/\", { email, password });\r\n      localStorage.setItem(\"access_token\", res.data.access);\r\n      localStorage.setItem(\"refresh_token\", res.data.refresh);\r\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n      setUser(res.data.user);\r\n      return res.data.user;\r\n    } catch (err) {\r\n      console.error(err.response?.data || err);\r\n      throw new Error(\"Erro ao fazer login. Verifique suas credenciais.\");\r\n    }\r\n  };\r\n\r\n  // Registro + login automático\r\n  const register = async ({ nome, email, telefone, password }) => {\r\n    try {\r\n      await api.post(\"/register/\", { nome, email, telefone, password });\r\n      return await login(email, password);\r\n    } catch (err) {\r\n      console.error(err.response?.data || err);\r\n      throw new Error(\"Erro ao registrar. Verifique os dados e tente novamente.\");\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    localStorage.clear();\r\n    setUser(null);\r\n  };\r\n\r\n  // Renovar token\r\n  const refreshToken = async () => {\r\n    const refresh = localStorage.getItem(\"refresh_token\");\r\n    if (!refresh) throw new Error(\"No refresh token available\");\r\n\r\n    try {\r\n      const res = await api.post(\"/token/refresh/\", { refresh });\r\n      localStorage.setItem(\"access_token\", res.data.access);\r\n      return res.data.access;\r\n    } catch (err) {\r\n      logout();\r\n      throw new Error(\"Sessão expirada. Faça login novamente.\");\r\n    }\r\n  };\r\n\r\n  // Configura interceptadores **uma única vez**\r\n  useEffect(() => {\r\n    const requestInterceptor = api.interceptors.request.use((config) => {\r\n      const token = localStorage.getItem(\"access_token\");\r\n      if (token) config.headers.Authorization = `Bearer ${token}`;\r\n      return config;\r\n    });\r\n\r\n    const responseInterceptor = api.interceptors.response.use(\r\n      (response) => response,\r\n      async (error) => {\r\n        const originalRequest = error.config;\r\n        if (error.response?.status === 401 && !originalRequest._retry) {\r\n          originalRequest._retry = true;\r\n          try {\r\n            const newAccess = await refreshToken();\r\n            originalRequest.headers.Authorization = `Bearer ${newAccess}`;\r\n            return api(originalRequest);\r\n          } catch (err) {\r\n            return Promise.reject(err);\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    // Remove interceptadores ao desmontar\r\n    return () => {\r\n      api.interceptors.request.eject(requestInterceptor);\r\n      api.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, register }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMO,GAAG,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC9BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACzD,MAAME,aAAa,GAAGH,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAE3D,IAAIF,UAAU,IAAIG,YAAY,IAAIC,aAAa,EAAE;MAC/CL,OAAO,CAACM,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC1DR,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEF,GAAG,CAACG,IAAI,CAACC,MAAM,CAAC;MACrDb,YAAY,CAACW,OAAO,CAAC,eAAe,EAAEF,GAAG,CAACG,IAAI,CAACE,OAAO,CAAC;MACvDd,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACW,SAAS,CAACN,GAAG,CAACG,IAAI,CAACf,IAAI,CAAC,CAAC;MAC3DC,OAAO,CAACW,GAAG,CAACG,IAAI,CAACf,IAAI,CAAC;MACtB,OAAOY,GAAG,CAACG,IAAI,CAACf,IAAI;IACtB,CAAC,CAAC,OAAOmB,GAAG,EAAE;MAAA,IAAAC,aAAA;MACZC,OAAO,CAACC,KAAK,CAAC,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,uBAAZA,aAAA,CAAcL,IAAI,KAAII,GAAG,CAAC;MACxC,MAAM,IAAIK,KAAK,CAAC,kDAAkD,CAAC;IACrE;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAAA,CAAO;IAAEC,IAAI;IAAEhB,KAAK;IAAEiB,QAAQ;IAAEhB;EAAS,CAAC,KAAK;IAC9D,IAAI;MACF,MAAMjB,GAAG,CAACmB,IAAI,CAAC,YAAY,EAAE;QAAEa,IAAI;QAAEhB,KAAK;QAAEiB,QAAQ;QAAEhB;MAAS,CAAC,CAAC;MACjE,OAAO,MAAMF,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;IACrC,CAAC,CAAC,OAAOQ,GAAG,EAAE;MAAA,IAAAS,cAAA;MACZP,OAAO,CAACC,KAAK,CAAC,EAAAM,cAAA,GAAAT,GAAG,CAACI,QAAQ,cAAAK,cAAA,uBAAZA,cAAA,CAAcb,IAAI,KAAII,GAAG,CAAC;MACxC,MAAM,IAAIK,KAAK,CAAC,0DAA0D,CAAC;IAC7E;EACF,CAAC;;EAED;EACA,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnB1B,YAAY,CAAC2B,KAAK,CAAC,CAAC;IACpB7B,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;;EAED;EACA,MAAM8B,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMd,OAAO,GAAGd,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACrD,IAAI,CAACa,OAAO,EAAE,MAAM,IAAIO,KAAK,CAAC,4BAA4B,CAAC;IAE3D,IAAI;MACF,MAAMZ,GAAG,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,iBAAiB,EAAE;QAAEI;MAAQ,CAAC,CAAC;MAC1Dd,YAAY,CAACW,OAAO,CAAC,cAAc,EAAEF,GAAG,CAACG,IAAI,CAACC,MAAM,CAAC;MACrD,OAAOJ,GAAG,CAACG,IAAI,CAACC,MAAM;IACxB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZU,MAAM,CAAC,CAAC;MACR,MAAM,IAAIL,KAAK,CAAC,wCAAwC,CAAC;IAC3D;EACF,CAAC;;EAED;EACAnC,SAAS,CAAC,MAAM;IACd,MAAM2C,kBAAkB,GAAGtC,GAAG,CAACuC,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;MAClE,MAAMC,KAAK,GAAGlC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAClD,IAAIiC,KAAK,EAAED,MAAM,CAACE,OAAO,CAACC,aAAa,GAAG,UAAUF,KAAK,EAAE;MAC3D,OAAOD,MAAM;IACf,CAAC,CAAC;IAEF,MAAMI,mBAAmB,GAAG9C,GAAG,CAACuC,YAAY,CAACV,QAAQ,CAACY,GAAG,CACtDZ,QAAQ,IAAKA,QAAQ,EACtB,MAAOD,KAAK,IAAK;MAAA,IAAAmB,eAAA;MACf,MAAMC,eAAe,GAAGpB,KAAK,CAACc,MAAM;MACpC,IAAI,EAAAK,eAAA,GAAAnB,KAAK,CAACC,QAAQ,cAAAkB,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;QAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;QAC7B,IAAI;UACF,MAAMC,SAAS,GAAG,MAAMd,YAAY,CAAC,CAAC;UACtCW,eAAe,CAACJ,OAAO,CAACC,aAAa,GAAG,UAAUM,SAAS,EAAE;UAC7D,OAAOnD,GAAG,CAACgD,eAAe,CAAC;QAC7B,CAAC,CAAC,OAAOvB,GAAG,EAAE;UACZ,OAAO2B,OAAO,CAACC,MAAM,CAAC5B,GAAG,CAAC;QAC5B;MACF;MACA,OAAO2B,OAAO,CAACC,MAAM,CAACzB,KAAK,CAAC;IAC9B,CACF,CAAC;;IAED;IACA,OAAO,MAAM;MACX5B,GAAG,CAACuC,YAAY,CAACC,OAAO,CAACc,KAAK,CAAChB,kBAAkB,CAAC;MAClDtC,GAAG,CAACuC,YAAY,CAACV,QAAQ,CAACyB,KAAK,CAACR,mBAAmB,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhD,OAAA,CAACC,WAAW,CAACwD,QAAQ;IAACC,KAAK,EAAE;MAAElD,IAAI;MAAES,KAAK;MAAEoB,MAAM;MAAEJ;IAAS,CAAE;IAAA3B,QAAA,EAC5DA;EAAQ;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvD,EAAA,CAnGWF,YAAY;AAAA0D,EAAA,GAAZ1D,YAAY;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}